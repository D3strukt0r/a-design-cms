version: "3.4"

services:
  db:
    image: mariadb
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--password=password"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - internal
    volumes:
      - database-mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: craft

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    networks:
      - internal
    ports:
      - 81:80
    environment:
      UPLOAD_LIMIT: 100M

  # db2:
  #   image: postgres
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "--username=postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - internal
  #   volumes:
  #     - database-pgsql:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: craft

  php:
    build:
      context: .
      target: php
      cache_from:
        - ${PHP_IMAGE_CACHE:-d3strukt0r/a-design-cms-php}
    image: ${PHP_IMAGE:-d3strukt0r/a-design-cms-php}
    healthcheck:
      start_period: 1m40s
    depends_on:
      - db
    networks:
      - internal
    volumes:
      - .:/app:rw,cached
    environment:
      PHP_MAX_EXECUTION_TIME: 0
      ENVIRONMENT: dev
      APP_ID: "CraftCMS--!justfordev!"
      SECURITY_KEY: "!justfordev!"
      # DB_DRIVER: pgsql
      # DB_SERVER: db2
      # DB_USER: postgres
      DB_DRIVER: mysql
      DB_SERVER: db
      DB_USER: root
      DB_PASSWORD: password
      DB_DATABASE: craft
      DEFAULT_SITE_URL: http://localhost

  nginx:
    build:
      context: .
      target: nginx
      cache_from:
        - ${PHP_IMAGE_CACHE:-d3strukt0r/a-design-cms-php}
        - ${NGINX_IMAGE_CACHE:-d3strukt0r/a-design-cms-nginx}
    image: ${NGINX_IMAGE:-d3strukt0r/a-design-cms-nginx}
    healthcheck:
      test: test -e /var/run/nginx.pid || exit 1
    depends_on:
      - php
    networks:
      - internal
    ports:
      - 80:80
      # - 443:443
    volumes:
      - ./web:/app/web:ro
    # environment:
    #   USE_HTTPS: "true"

networks:
  internal:
    external: false

volumes:
  database-mysql:
  # database-pgsql:
